import React, { useState } from 'react';
// import { IntlProvider } from 'react-intl';

// import English from '../../languages/en-US.json';
// import Spanish from '../../languages/es-MX.json';
// import German from '../../languages/de-DE.json';
// import Chinese from '../../languages/zh-CN.json';
// import Japanese from '../../languages/ja-JP.json';
// import French from '../../languages/fr-FR.json';
// import Italian from '../../languages/it-IT.json';

// export const Context = React.createContext(null);

// const local = navigator.language;
// let lang = English;

// type WrapperType = {
//   locale: Element;
//   selectLang: null;
//   // children: Element;
// };

// const Wrapper = (props: WrapperType) => {
//   const [locale, setLocale] = useState<string>(local);
//   const [message, setMessage] = useState<string>(JSON.stringify(lang));

//   function selectLang(e: React.ChangeEvent<HTMLInputElement>) {
//     const newLocale = e.target.value;
//     setLocale(newLocale);
//     switch (newLocale) {
//       case 'en-US':
//         setMessage(JSON.stringify(English));
//         break;
//       case 'zh-CN':
//         setMessage(JSON.stringify(Chinese));
//         break;
//       case 'ja-JP':
//         setMessage(JSON.stringify(Japanese));
//         break;
//       case 'fr-FR':
//         setMessage(JSON.stringify(French));
//         break;
//       case 'de-DE':
//         setMessage(JSON.stringify(German));
//         break;
//       case 'es-MX':
//         setMessage(JSON.stringify(Spanish));
//         break;
//       case 'it-IT':
//         setMessage(JSON.stringify(Italian));
//         break;
//       default:
//         setMessage(JSON.stringify(English));
//         break;
//     }
//   }

//   return (
//     <Context.Provider value={{ locale, selectLang }}>
//       <IntlProvider message={message} islocale={locale}>
//         {props.children}
//       </IntlProvider>
//     </Context.Provider>
//   );
// };

// export default Wrapper;
